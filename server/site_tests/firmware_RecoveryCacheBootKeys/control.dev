# Copyright 2017 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "ChromeOS Team"
NAME = "firmware_RecoveryCacheBootKeys.dev"
METADATA = {
        "contacts": ["chromeos-faft@google.com", "jbettis@chromium.org"],
        "bug_component": "b:792402", # ChromeOS > Platform > Enablement > Firmware > FAFT
        "criteria": "Servo based RECOVERY_MRC_CACHE boot tests",
}
ATTRIBUTES = "suite:faft_bios, suite:faft_bios_ro_qual, suite:faft_lv2"
DEPENDENCIES = "servo_state:WORKING, servo_usb_state:NORMAL"
TIME = "SHORT"
TEST_TYPE = "server"

DOC = """
This test ensures that when booting to recovery mode the device will use the
cache instead training memory every boot.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run_rec_boot_use_cache(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test("firmware_RecoveryCacheBootKeys", host=host, cmdline_args=args,
                 disable_sysinfo=True, dev_mode=True, tag="dev")

parallel_simple(run_rec_boot_use_cache, machines)
