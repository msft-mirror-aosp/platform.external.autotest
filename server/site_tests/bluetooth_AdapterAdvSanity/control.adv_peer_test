# Copyright 2020 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = 'chromeos-bluetooth'
NAME = 'bluetooth_AdapterAdvSanity.adv_peer_test'
PURPOSE = ('batch of Bluetooth advertising tests')
CRITERIA = 'Adapter should advertise with correct parameters'
ATTRIBUTES = 'suite:bluetooth_flaky'
TIME = 'SHORT'  # ~3 minutes on Sarien
TEST_CATEGORY = 'Functional'
TEST_CLASS = 'bluetooth'
TEST_TYPE = 'server'
DEPENDENCIES = 'bluetooth'

DOC = """
    Advertising peer test.

    This test configures and enables multiple advertising instances on the DUT,
    and then confirms that they are all discoverable independently from an
    external device. It also confirms the correctness of the advertising by
    comparing it to the original advertisement configured on the DUT side.
    """

args_dict = utils.args_to_dict(args)
#
# Bluetooth peers can be named hostname-<chameleon> or hostname-<btpeer[1-4]
# Check for both until we transition to new peer names
# TODO(b:149637050) Cleanup this code
#
chameleon_args = hosts.CrosHost.get_chameleon_arguments(args_dict)
btpeer_args = hosts.CrosHost.get_btpeer_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, chameleon_args=chameleon_args)
    host.initialize_btpeer(btpeer_args)
    job.run_test('bluetooth_AdapterAdvSanity', host=host,
                 num_iterations=1, test_name=NAME.split('.')[1])

parallel_simple(run, machines)