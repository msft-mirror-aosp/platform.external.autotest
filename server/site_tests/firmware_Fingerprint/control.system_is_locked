# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This test enables hardware and software write protection when setting up the
# test.
#
# When the test script starts, it runs a command that should be protected when
# "system_is_locked()" is enabled. The test verifies we get an ACCESS_DENIED
# error.

from autotest_lib.server import utils

NAME = "firmware_Fingerprint.SystemIsLocked"
METADATA = {
    "contacts": ["chromeos-fingerprint@google.com"],
    "bug_component": "b:782045",
    "criteria": "Fails if FPMCU firmware is not locked.",
}

ATTRIBUTES = "suite:fingerprint"
TEST_TYPE = "server"
DEPENDENCIES = "servo_state:WORKING, fingerprint"
HW_DEPS = ['biod']
JOB_RETRIES = 0

test_images = ["TEST_IMAGE_ORIGINAL"]

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)


def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test(
        "firmware_Fingerprint",
        host=host,
        test_exe="system_is_locked.sh",
        test_exe_args=test_images,
        enable_hardware_write_protect=True,
        enable_software_write_protect=True,
        tag="SystemIsLocked",
    )


parallel_simple(run, machines)
