# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "mruthven"
NAME = "firmware_Cr50APROTrigger"
METADATA = {
        "contacts": ["chromeos-faft@google.com", "mruthven@chromium.org"],
        "bug_component": "b:792402", # ChromeOS > Platform > Enablement > Firmware > FAFT
        "criteria": "Test triggering AP RO verification on Cr50"
}
# TODO(b/379673726): reenable when the test issues are fixed
#ATTRIBUTES = "suite:faft_cr50_experimental,suite:faft_gsc_nightly"
TIME = "SHORT"
TEST_TYPE = "server"
DEPENDENCIES = "servo_state:WORKING"

DOC = """
Check AP RO verification behavior on Cr50. Verify it gets set to
UNSUPPORTED_TRIGGERED, when AP RO verification is triggered. Verify it can be
cleared if the device resets 10s after it's triggered.
"""

from autotest_lib.client.common_lib import error
from autotest_lib.server import utils

if 'args_dict' not in locals():
    args_dict = {}

args_dict.update(utils.args_to_dict(args))
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args)

    job.run_test("firmware_Cr50APROTrigger", host=host, cmdline_args=args,
                 full_args=args_dict)

parallel_simple(run, machines)
