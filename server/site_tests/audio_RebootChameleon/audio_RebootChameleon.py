# Lint as: python2, python3
# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
"""
This is a server side test which reboots chameleon to keep it healthy.
"""

import logging
import time

from autotest_lib.client.common_lib import error
from autotest_lib.server.cros.audio import audio_test

WAIT_AFTER_REBOOT = 10


class audio_RebootChameleon(audio_test.AudioTest):
  """Reboot chameleon.

  This test provides a periodic soft-reboot mechanism for chameleon per suite.

  This test will:
  a. reboot chameleon device and restart chameleond
  b. make polling to the chameleon device
  c. recreate the SSH tunneling between drone and chameleon
  d. execute a simple health check to make sure the XMLRPC service is up and running.
  """
  version = 1

  def _reboot_chameleon(self):
    """Reboots chameleon."""
    # Reboot chameleon will break the SSH tunnel between drone and chameleon, so
    # the retry mechanism in ChameleonConnection cannot find chameleon after reboot.
    # Here we ignore those exceptions generated by ChameleonConnection, and later
    # the connection will be recreated and have health checked after reboot.
    try:
      self.host.chameleon.reboot()
    except Exception:
      pass

  def run_once(self):
    """Reboot to maintain chameleon healthness."""
    logging.info("Rebooting Chameleon.")

    if not self.host.chameleon:
      raise error.TestFail("Chameleon Not Found.")

    address = self.host.chameleon.get_network_address()
    logging.info("Chameleon address: %s", address)

    self._reboot_chameleon()
    time.sleep(WAIT_AFTER_REBOOT)

    logging.info("Reboot completed.")
