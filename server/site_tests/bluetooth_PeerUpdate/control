# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

#
# Please note the btpeer update is now handle by infra repair process.
# https://chromium.googlesource.com/chromiumos/platform/dev-util/+/HEAD/contrib/btpeer_manager/README.md
# Updating btpeers via this test is not required for devices in swarming.
# This test is only for use by partners.
#
# This is not a test. This 'test' checks the chameleond version on the
# Bluetooth peer and updates if it is less that expected version in the test.
#
# Use this test if you have made a change to chameleond which should be deployed
# in the lab.
#
# Note: Due to way the scheduler works, if there is more than one DUT of same
# model, test will be run only on one of them. Thus the process is
# indeterministic now but over a large period of time all the peer devices in
# the lab should(?) be updated.
#
# Purpose: Update chameleond on Bluetooth peer device

# Deprecated variables:
#     TIME = 'SHORT'    # This test takes about 1 minutes while running locally
#     TEST_CATEGORY = 'Functional'

from autotest_lib.server import utils

NAME = 'bluetooth_PeerUpdate'
METADATA = {
    'contacts': ['chromeos-bt-team@google.com'],
    # ChromeOS > Platform > Connectivity > Bluetooth
    'bug_component': 'b:167317',
    'criteria': 'Bluetooth peer should be present',
    'hw_agnostic': False,
    'life_cycle_stage': 'owner_monitored',
}


ATTRIBUTES = ''
TEST_TYPE = 'server'
DEPENDENCIES = 'wificell'


args_dict = utils.args_to_dict(args)
btpeer_args = hosts.CrosHost.get_btpeer_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine)
    job.run_test('bluetooth_PeerUpdate', host=host, btpeer_args=btpeer_args)

parallel_simple(run, machines)
