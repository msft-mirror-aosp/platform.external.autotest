# Copyright 2018 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file has been automatically generated. Do not edit!
from autotest_lib.server import utils as server_utils

AUTHOR = 'n/a'
NAME = 'cheets_CTS_P.internal.arm.all.CtsBionicTestCases_-_CtsDebugTestCases'
METADATA = {
    "contacts": ["arc-cts-eng@google.com"],
    "bug_component": "b:183644",
    "criteria": "A part of Android CTS",
}
ATTRIBUTES = 'suite:arc-cts-qual, suite:arc-cts-qual-arm-3'
DEPENDENCIES = 'arc'
HW_DEPS = ['android-container-pi']
JOB_RETRIES = 1
TEST_TYPE = 'server'
TIME = 'MEDIUM'
MAX_RESULT_SIZE_KB = 512000
DOC = 'n/a'

# For local debugging, if your test setup doesn't have servo, REMOVE these
# two lines.
args_dict = server_utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run_TS(machine):
    # REMOVE 'servo_args=servo_args' arg for local debugging if your test
    # setup doesn't have servo.
    try:
        host_list = [hosts.create_host(machine, servo_args=servo_args)]
    except:
        # Just ignore any servo setup flakiness.
        host_list = [hosts.create_host(machine)]
    job.run_test(
        'cheets_CTS_P',
        hosts=host_list,
        iterations=1,
        max_retry=9,
        enable_default_apps=True,
        tag='internal.arm.all.CtsBionicTestCases_-_CtsDebugTestCases',
        test_name='cheets_CTS_P.internal.arm.all.CtsBionicTestCases_-_CtsDebugTestCases',
        run_template=['run', 'commandAndExit', 'cts', '--include-filter', 'CtsBionicTestCases', '--include-filter', 'CtsBluetoothTestCases', '--include-filter', 'CtsBootStatsTestCases', '--include-filter', 'CtsCalendarcommon2TestCases', '--include-filter', 'CtsCameraApi25TestCases', '--include-filter', 'CtsCarTestCases', '--include-filter', 'CtsCarrierApiTestCases', '--include-filter', 'CtsColorModeTestCases', '--include-filter', 'CtsCompilationTestCases', '--include-filter', 'CtsContactsProviderWipe', '--include-filter', 'CtsContentTestCases', '--include-filter', 'CtsCppToolsTestCases', '--include-filter', 'CtsCurrentApiSignatureTestCases', '--include-filter', 'CtsDatabaseTestCases', '--include-filter', 'CtsDebugTestCases', '--logcat-on-failure', '--dynamic-config-url='],
        retry_template=['run', 'commandAndExit', 'retry', '--retry', '{session_id}', '--dynamic-config-url='],
        target_module='all.CtsBionicTestCases_-_CtsDebugTestCases',
        target_plan=None,
        bundle='arm',
        uri='LATEST',
        prerequisites=['bluetooth', 'region_us'],
        hard_reboot_on_failure=True,
        timeout=28800)

parallel_simple(run_TS, machines)
