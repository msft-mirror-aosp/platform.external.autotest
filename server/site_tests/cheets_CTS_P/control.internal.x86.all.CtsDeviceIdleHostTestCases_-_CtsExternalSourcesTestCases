# Copyright 2018 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file has been automatically generated. Do not edit!

AUTHOR = 'n/a'
NAME = 'cheets_CTS_P.internal.x86.all.CtsDeviceIdleHostTestCases_-_CtsExternalSourcesTestCases'
METADATA = {
    "contacts": ["arc-cts-eng@google.com"],
    "bug_component": "b:183644",
    "criteria": "A part of Android CTS",
}
ATTRIBUTES = 'suite:arc-cts-qual, suite:arc-cts-qual-x86-4'
DEPENDENCIES = 'arc, cts_abi_x86'
HW_DEPS = ['android-container-pi']
JOB_RETRIES = 1
TEST_TYPE = 'server'
TIME = 'MEDIUM'
MAX_RESULT_SIZE_KB = 512000
DOC = 'n/a'

def run_TS(machine):
    host_list = [hosts.create_host(machine)]
    job.run_test(
        'cheets_CTS_P',
        hosts=host_list,
        iterations=1,
        max_retry=9,
        tag='internal.x86.all.CtsDeviceIdleHostTestCases_-_CtsExternalSourcesTestCases',
        test_name='cheets_CTS_P.internal.x86.all.CtsDeviceIdleHostTestCases_-_CtsExternalSourcesTestCases',
        run_template=['run', 'commandAndExit', 'cts', '--include-filter', 'CtsDeviceIdleHostTestCases', '--include-filter', 'CtsDevicePolicyManagerTestCases', '--include-filter', 'CtsDexMetadataHostTestCases', '--include-filter', 'CtsDisplayTestCases', '--include-filter', 'CtsDpiTestCases', '--include-filter', 'CtsDpiTestCases2', '--include-filter', 'CtsDreamsTestCases', '--include-filter', 'CtsDrmTestCases', '--include-filter', 'CtsDumpsysHostTestCases', '--include-filter', 'CtsDynamicLinkerTestCases', '--include-filter', 'CtsEdiHostTestCases', '--include-filter', 'CtsEffectTestCases', '--include-filter', 'CtsExternalServiceTestCases', '--include-filter', 'CtsExternalSourcesTestCases', '--logcat-on-failure', '--dynamic-config-url='],
        retry_template=['run', 'commandAndExit', 'retry', '--retry', '{session_id}', '--dynamic-config-url='],
        target_module='all.CtsDeviceIdleHostTestCases_-_CtsExternalSourcesTestCases',
        target_plan=None,
        bundle='x86',
        uri='LATEST',
        timeout=27000)

parallel_simple(run_TS, machines)
