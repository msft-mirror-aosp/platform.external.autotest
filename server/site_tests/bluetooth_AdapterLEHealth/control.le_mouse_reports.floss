# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

#
#      Server side bluetooth tests about sending bluetooth HID reports.
#
#      This test tries to send HID reports to a DUT and verifies if the DUT
#      could receive the reports correctly. For the time being, only bluetooth
#      mouse events are tested. Bluetooth keyboard events will be supported
#      later.
#
#
#     - test_pairing
#     - test_connection_by_adapter
#     - test_mouse_left_click
#     - test_mouse_right_click
#     - test_mouse_move_in_x
#     - test_mouse_move_in_y
#     - test_mouse_move_in_xy
#     - test_mouse_scroll_down
#     - test_mouse_scroll_up
#     - test_mouse_click_and_drag
#     - test_disconnection_by_adapter
#     - test_remove_pairing
#
#
#
# Purpose: Batch of Bluetooth LE health tests

# Deprecated variables:
#     TIME = 'MEDIUM'
#     TEST_CATEGORY = 'Functional'

from autotest_lib.server import utils

NAME = 'bluetooth_AdapterLEHealth.le_mouse_reports.floss'
METADATA = {
    'contacts': ['chromeos-bt-team@google.com'],
    # ChromeOS > Platform > Connectivity > Bluetooth
    'bug_component': 'b:167317',
    'criteria': 'Pass all health test',
    'hw_agnostic': False,
    'variant_category': '{"name": "BT_Chipset_Kernel"}',
    'requirements': ['bt-gen-0001-v01'],
}


ATTRIBUTES = 'suite:bluetooth_floss,suite:bluetooth_floss_cq, group:release-health, release-health_bt'
TEST_TYPE = 'server'
DEPENDENCIES = 'bluetooth_state:NORMAL, working_bluetooth_btpeer:1'


args_dict = utils.args_to_dict(args)

def run(machine):
    host = hosts.create_host(machine)
    job.run_test('bluetooth_AdapterLEHealth', host=host,
                 tag='.'.join(NAME.split('.')[1:]),
                 num_iterations=1, args_dict=args_dict,
                 test_name=NAME.split('.')[1], floss=True)

parallel_simple(run, machines)
