# Copyright 2011 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
# TODO(b/290823172): Please remove this test when PVS is no longer using it.

from autotest_lib.server import utils

AUTHOR = "ChromeOS Team"
NAME = "firmware_CorruptBothFwBodyAB"
METADATA = {
    "contacts": ["chromeos-faft@google.com", "jbettis@chromium.org"],
    "bug_component": "b:792402",  # ChromeOS > Platform > Enablement > Firmware > FAFT
    "criteria": "Servo based both firmware body A and B corruption test",
}
ATTRIBUTES = ""
DEPENDENCIES = "servo_state:WORKING, servo_usb_state:NORMAL"
TIME = "SHORT"
TEST_TYPE = "server"
JOB_RETRIES = 0

DOC = """
This test corrupts both firmware body A and B and checks the next boot results.

The RW firmware verification is expected to fail and enters recovery mode.
It requires a USB disk plugged-in, which contains a ChromeOS test image
(built by "build_image --test").
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)


def run_corruptbothfwbodyab(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test(
        "firmware_CorruptBothFwBodyAB",
        host=host,
        cmdline_args=args,
        disable_sysinfo=True,
        dev_mode=False,
    )


parallel_simple(run_corruptbothfwbodyab, machines)
