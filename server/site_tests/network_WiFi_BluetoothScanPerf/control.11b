# Copyright 2015 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

NAME = 'network_WiFi_BluetoothScanPerf.11b'
METADATA = {
    'requirements': ['wifi-coex-0001-v01'],
    'contacts': ['chromeos-wifi-champs@google.com'],
    # ChromeOS > Platform > Connectivity > WiFi
    'bug_component': 'b:893827',
    # netperf is used for measuring the throughput.
    # Network: Open 802.11b, Channel 6.
    'criteria': 'Measure the maximal receiving and transmitting throughput on a DUT while scanning bluetooth',
    'hw_agnostic': False,
    'variant_category': '{"name": "WifiBtChipset_Soc_Kernel"}',
}
ATTRIBUTES = 'suite:bluetooth_wifi_coex'
TEST_TYPE = 'Server'
DEPENDENCIES = 'wificell, peripheral_wifi_state:WORKING'

from autotest_lib.server import utils
from autotest_lib.server.cros.network import hostap_config

args_dict = utils.args_to_dict(args)

def run(machine):
    host = hosts.create_host(machine)
    mode = hostap_config.HostapConfig.MODE_11B
    configs = [hostap_config.HostapConfig(channel=channel, mode=mode)
               for channel in (6,)]
    use_iperf=True
    job.run_test('network_WiFi_BluetoothScanPerf', tag=NAME.split('.')[1],
                 host=host, raw_cmdline_args=args,
                 additional_params=(configs, use_iperf))


parallel_simple(run, machines)
