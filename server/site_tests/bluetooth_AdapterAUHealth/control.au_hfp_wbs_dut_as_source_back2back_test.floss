# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Run the test, HFP WBS back to back, with DUT as source.
#
# The test starts then stops the stream playback for three times. In each
# iteration, it checks the Bluetooth device can successfully receive the
# stream when it is played; also check the absence of the streama when stop
# playing.
#
# Purpose: Run the test, HFP WBS back to back, with DUT as source

# Deprecated variables:
#     TIME = 'SHORT'  # Approximately 5 mins
#     TEST_CATEGORY = 'Functional'

from autotest_lib.server import utils

NAME = 'bluetooth_AdapterAUHealth.au_hfp_wbs_dut_as_source_back2back_test.floss'
METADATA = {
    'contacts': ['chromeos-bt-team@google.com'],
    # ChromeOS > Platform > Connectivity > Bluetooth
    'bug_component': 'b:167317',
    'criteria': 'Pass all audio file checking',
    'hw_agnostic': False,
    'variant_category': '{"name": "BT_Chipset_Kernel_exclude_WBS_not_supported"}',
    'requirements': ['bt-audPath-0001-v01', 'bt-audPath-0003-v01',
                     'bt-phy-0002-v01']
}


ATTRIBUTES = 'suite:bluetooth_floss, group:release-health, release-health_bt'
TEST_TYPE = 'server'
DEPENDENCIES = 'bluetooth_state:NORMAL, working_bluetooth_btpeer:1'


args_dict = utils.args_to_dict(args)

def run(machine):
    host = hosts.create_host(machine)
    job.run_test('bluetooth_AdapterAUHealth', host=host, num_iterations=1,
                 args_dict=args_dict, test_name=NAME.split('.')[1], tag='.'.join(NAME.split('.')[1:]), floss=True)

parallel_simple(run, machines)
