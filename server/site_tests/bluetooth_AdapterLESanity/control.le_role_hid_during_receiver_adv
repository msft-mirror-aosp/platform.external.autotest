# Copyright 2020 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils
from autotest_lib.server.cros.bluetooth import bluetooth_test

AUTHOR = 'chromeos-bluetooth'
NAME = 'bluetooth_AdapterLESanity.le_role_hid_during_receiver_adv'
PURPOSE = ('Tests controller can initiate HID connection during receiver adv')
CRITERIA = 'Pass the test'
ATTRIBUTES = 'suite:bluetooth_flaky'
TIME = 'SHORT'
TEST_CATEGORY = 'Functional'
TEST_CLASS = 'bluetooth'
TEST_TYPE = 'server'
DEPENDENCIES = 'bluetooth, chameleon:bt_ble_hid'

DOC = """Tests HID capability during Receiver role advertising

      In Receiver role, the DUT will need to be advertising. This test checks
      if the controller is able to initiate a new connection to a HID device
      while in the advertising state.
      """

args_dict = utils.args_to_dict(args)
#
# Bluetooth peers can be named hostname-<chameleon> or hostname-<btpeer[1-4]
# Check for both until we transition to new peer names
# TODO(b:149637050) Cleanup this code
#
chameleon_args = hosts.CrosHost.get_chameleon_arguments(args_dict)
btpeer_args = hosts.CrosHost.get_btpeer_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, chameleon_args=chameleon_args)
    host.initialize_btpeer(btpeer_args)
    job.run_test('bluetooth_AdapterLESanity', host=host,
                  num_iterations=1, test_name=NAME.split('.')[1])

parallel_simple(run, machines)