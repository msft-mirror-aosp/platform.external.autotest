# Copyright 2022 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "ChromeOS PVS Team"
NAME = "pvs_Sequence.ExampleSequence"
PURPOSE = "stub_Pass and PassServer, instrumented as a basic sequence example"
CRITERIA = "This test is a benchmark."
TIME = "SHORT"
TEST_CATEGORY = "Benchmark"
TEST_CLASS = "pvs"
TEST_TYPE = "server"
ATTRIBUTES = ""
PY_VERSION = 3
DOC = """
This is an example sequence, showing how to use the pvs_Sequence test class to
standardize sequence implementation in control files. When creating a new
sequence, start from this example implementation and:

(1) Make sure your NAME is in the form 'pvs_Sequence.<sequence-name>'
(2) Fill the SEQUENCE data structure below as the fields are indicated
"""

from autotest_lib.server import utils

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

# Fill this list with tuples of (<test-name>, <args_dict>, <is_server_test>)
SEQUENCE = [
    ("stub_PassServer", {}, True),
    ("stub_Pass",       {}, False)
]

def run(machine):
    # Setup the client machine.
    host = hosts.create_host(machine, servo_args=servo_args)

    # run the pvs_Sequence wrapper, with the input of the SEQUENCE
    # defined above
    job.run_test("pvs_Sequence",
                           tag=NAME.split('.')[1],
                           host=host,
                           sequence=SEQUENCE)

parallel_simple(run, machines)