# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Attempts to add entropy while running RW firmware and verifies that it fails.
# Adds entropy from RO firmware and verifies that rollback block ID increments
# by one. Then adds entropy with reset (double write) and verifies block ID
# incremented by two. Finally, reboots back to RW.

from autotest_lib.server import utils

NAME = "firmware_Fingerprint.AddEntropy"
METADATA = {
    "contacts": ["chromeos-fingerprint@google.com"],
    "bug_component": "b:782045",
    "criteria": "Fails if we can add entropy from RW or cannot add entropy from RO.",
}

ATTRIBUTES = "suite:fingerprint"
TEST_TYPE = "server"
DEPENDENCIES = "servo_state:WORKING, fingerprint"
HW_DEPS = ['biod']
JOB_RETRIES = 0

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)


def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test(
        "firmware_Fingerprint",
        host=host,
        test_exe="add_entropy.sh",
        tag="AddEntropy",
    )


parallel_simple(run, machines)
